RDS Database id and password(vocab-builder)

Durgesh_1518
Durgesh_1518
vocab-builder.cpq8o2640x7m.ap-south-1.rds.amazonaws.com
ACCESS = AKIAWNHTHNCW4VL7QI6A
SECRET = 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


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  email      String      @unique
  password   String
  words      Word[]
  wordGroups WordGroup[]
}

model Word {
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  userId    String          @db.ObjectId
  user      User            @relation(fields: [userId], references: [id])
  text      String
  meaning   String
  synonyms  String[]
  antonyms  String[]
  example   String
  prefix    String?
  suffix    String?
  root      String?
  groups    WordGroupWord[] @relation("WordToGroup")
  createdAt DateTime        @default(now())
}

model WordGroup {
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  userId    String          @db.ObjectId
  user      User            @relation(fields: [userId], references: [id])
  label     String
  meaning   String
  words     WordGroupWord[] @relation("GroupToWord")
  order     Int             @default(0)
  createdAt DateTime        @default(now())
}

model WordGroupWord {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  word      Word      @relation(fields: [wordId], references: [id], name: "WordToGroup")
  wordId    String    @db.ObjectId
  group     WordGroup @relation(fields: [groupId], references: [id], name: "GroupToWord")
  groupId   String    @db.ObjectId
  order     Int       @default(0)
  createdAt DateTime  @default(now())
}








generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  email        String       @unique
  password     String
  profileImage String?      // Optional profile image URL
  words        Word[]
  wordGroups   WordGroup[]
  createdAt    DateTime     @default(now())
}

model Word {
  id          String          @id @default(uuid())
  userId      String
  user        User            @relation(fields: [userId], references: [id])
  text        String
  meaning     String
  synonyms    String[]        // PostgreSQL supports text[]
  antonyms    String[]        // PostgreSQL supports text[]
  example     String
  prefix      String?
  suffix      String?
  root        String?
  mediaUrls   String[]        // URLs to S3 assets
  groups      WordGroupWord[]
  createdAt   DateTime        @default(now())
}

model WordGroup {
  id        String          @id @default(uuid())
  userId    String
  user      User            @relation(fields: [userId], references: [id])
  label     String
  meaning   String
  words     WordGroupWord[]
  order     Int             @default(0)
  createdAt DateTime        @default(now())
}

model WordGroupWord {
  id        String    @id @default(uuid())
  wordId    String
  groupId   String
  word      Word      @relation(fields: [wordId], references: [id])
  group     WordGroup @relation(fields: [groupId], references: [id])
  order     Int       @default(0)
  createdAt DateTime  @default(now())

  @@unique([wordId, groupId]) // Prevent duplicate mappings
}
